BIN = bin
OUT = out
SRC = src

CONS=../upduino.pcf
REPORT=report.json

TOP ?= top

FILES := $(wildcard $(SRC)/*.v)
FILES += $(wildcard $(SRC)/*.sv)
FILES += $(wildcard ../lib/*.v)
FILES += $(wildcard ../lib/*.sv)

all: bit
synth: $(BIN)/$(TOP).json
impl: $(BIN)/$(TOP).asc
bit: $(OUT)/$(TOP).bin

clean:
	rm -rf $(OUT) $(BIN) *.svg

prog: bit
	iceprog $<

$(BIN):
	mkdir $(BIN)
$(OUT):
	mkdir $(OUT)

$(BIN)/$(TOP).json: $(FILES) | $(BIN)
	yosys -p 'read_verilog -defer $^; synth_ice40 -top $(TOP) -json $@'

$(BIN)/$(TOP).asc $(OUT)/$(REPORT) &: $(CONS) $(BIN)/$(TOP).json | $(BIN) $(OUT)
	nextpnr-ice40 --report $(OUT)/$(REPORT) --up5k --pcf $(CONS) --package sg48 --asc $(BIN)/$(TOP).asc --json $(BIN)/$(TOP).json

$(OUT)/$(TOP).bin: $(BIN)/$(TOP).asc | $(OUT)
	icepack $< $@

%.svg: $(FILES)
	rm -f *.svg
	yosys -p 'read_verilog -defer $^; synth -top $(basename $@); write_json $(basename $@).json'
	netlistsvg $(basename $@).json -o $@
	rm -f $(basename $@).json

.PHONY: all clean prog synth impl bit
.SILENT: $(BIN) $(OUT)
