BIN = bin
OUT = out
SRC = src
LOG = log

CONS=../upduino.pcf
REPORT_NAME=report
REPORT=$(REPORT_NAME).json
REPORT_RAW=$(REPORT_NAME)_raw.json

YOSYS_LOG=yosys.log
NEXTPNR_LOG=nextpnr.log

TOP ?= top

FILES := $(wildcard $(SRC)/*.v)
FILES += $(wildcard $(SRC)/*.sv)
FILES += $(wildcard ../lib/*.v)
FILES += $(wildcard ../lib/*.sv)

FILES_SVG := $(FILES)
FILES_SVG += $(wildcard ../lib/upduino_stubs/*.v)
FILES_SVG += $(wildcard ../lib/upduino_stubs/*.sv)

all: bit
synth: $(BIN)/$(TOP).json
impl: $(BIN)/$(TOP).asc
bit: $(OUT)/$(TOP).bin
report: $(OUT)/$(REPORT)

clean:
	rm -rf $(OUT) $(BIN) $(LOG) *.svg

prog: $(OUT)/$(TOP).bin
	iceprog $<

$(BIN):
	mkdir $(BIN)
$(OUT):
	mkdir $(OUT)
$(LOG):
	mkdir $(LOG)

$(BIN)/$(TOP).json: $(FILES) | $(BIN) $(LOG)
	yosys -p 'read_verilog -sv -defer $^; synth_ice40 -top $(TOP) -json $@' 2>&1 | tee $(LOG)/$(YOSYS_LOG)

$(BIN)/$(TOP).asc $(OUT)/$(REPORT) &: $(CONS) $(BIN)/$(TOP).json | $(BIN) $(OUT) $(LOG)
	nextpnr-ice40 --detailed-timing-report --report $(BIN)/$(REPORT_RAW) --up5k --pcf $(CONS) --package sg48 --asc $(BIN)/$(TOP).asc --json $(BIN)/$(TOP).json 2>&1 | tee $(LOG)/$(NEXTPNR_LOG)
	cat $(BIN)/$(REPORT_RAW) | python3 -mjson.tool > $(OUT)/$(REPORT)

$(OUT)/$(TOP).bin: $(BIN)/$(TOP).asc | $(OUT) $(LOG)
	icepack $< $@

%.svg: $(FILES_SVG) | $(LOG)
	yosys -p 'read_verilog -sv -defer $^; synth -top $(basename $@); write_json $(basename $@).json' | tee $(LOG)/$(YOSYS_LOG)
	netlistsvg $(basename $@).json -o $@
	rm -f $(basename $@).json

.PHONY: all clean prog synth impl bit
.SILENT: $(BIN) $(OUT)
